<Page x:Class="WpfApp1.AccountsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:WpfApp1"
      mc:Ignorable="d" 
      d:DesignHeight="635" d:DesignWidth="1280"
      Title="AccountsPage">

    <Page.Resources>

        <!--Label Header-->
        <Style x:Key="LabelHeaderStyle" TargetType="Label">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="auto"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="FontSize" Value="24"/>
        </Style>

        <!--ImageBoxTopTools-->
        <Style x:Key="ToolboxStyle" TargetType="Image">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
        </Style>

        <!--TextBox-->
        <Style x:Key="TextboxStyle" TargetType="TextBox">
            <Setter Property="Height" Value="34"/>
            <Setter Property="Width" Value="398"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="81,0,10,0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="CaretBrush" Value="White"/>
            <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="pack://application:,,,/Resources/TextBox.png"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="False">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="pack://application:,,,/Resources/TextBox.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="pack://application:,,,/Resources/TextBoxHover.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="pack://application:,,,/Resources/TextBoxActivated.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--PasswordBox-->
        <Style x:Key="PasswordboxStyle" TargetType="PasswordBox">
            <Setter Property="Height" Value="34"/>
            <Setter Property="Width" Value="400"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="81,0,81,0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="CaretBrush" Value="White"/>
            <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="pack://application:,,,/Resources/TextBox.png"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Tag" Value="False"/>
            <EventSetter Event="PasswordChanged" Handler="OnPasswordChanged"/>
            <Style.Triggers>
                <!--<Trigger Property="IsFocused" Value="False">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="pack://application:,,,/Resources/TextBox.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="pack://application:,,,/Resources/TextBoxHover.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="pack://application:,,,/Resources/TextBoxActivated.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--CluebannerUsername-->
        <Style x:Key="CluebannerUsernameStyle" TargetType="Label">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding ="{Binding ElementName=textboxUsername, Path=Text.Length}" Value="0"/>
                        <!--<Condition Binding ="{Binding ElementName=textboxEmail, Path=IsFocused}" Value="False"/>-->
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <!--CluebannerEmail-->
        <Style x:Key="CluebannerEmailStyle" TargetType="Label">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding ="{Binding ElementName=textboxEmail, Path=Text.Length}" Value="0"/>
                        <!--<Condition Binding ="{Binding ElementName=textboxEmail, Path=IsFocused}" Value="False"/>-->
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <!--CluebannerPassword-->
        <Style x:Key="CluebannerPasswordStyle" TargetType="Label">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=passwordboxPassword, Path=Tag}" Value="False">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--CluebannerUsernameEdit-->
        <Style x:Key="CluebannerUsernameEditStyle" TargetType="Label">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding ="{Binding ElementName=textboxUsernameEdit, Path=Text.Length}" Value="0"/>
                        <!--<Condition Binding ="{Binding ElementName=textboxEmail, Path=IsFocused}" Value="False"/>-->
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <!--CluebannerEmailEdit-->
        <Style x:Key="CluebannerEmailEditStyle" TargetType="Label">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding ="{Binding ElementName=textboxEmailEdit, Path=Text.Length}" Value="0"/>
                        <!--<Condition Binding ="{Binding ElementName=textboxEmail, Path=IsFocused}" Value="False"/>-->
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <!--CluebannerPasswordEdit-->
        <Style x:Key="CluebannerPasswordEditStyle" TargetType="Label">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=passwordboxPasswordEdit, Path=Tag}" Value="False">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--ImageBoxTextboxIcons-->
        <Style x:Key="TextboxIconStyle" TargetType="Image">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>
        </Style>

        <!--ContextMenu Style-->
        <Style x:Key="ContextMenuStyle" TargetType="ContextMenu">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            <Setter Property="HasDropShadow" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border" Background="#29353b" BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#6a7276" />
                            </Border.BorderBrush>
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" Value="true">
                                <Setter TargetName="Border" Property="Margin" Value="0,10,0,0" />
                                <!--<Setter TargetName="Border" Property="CornerRadius" Value="4" />-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ContextMenu Item-->
        <Style x:Key="ContextMenuItemStyle" TargetType="MenuItem">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>

        <!--Label Sidebar-->
        <Style x:Key="LabelSidebarStyle" TargetType="Label">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="auto"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>

        <!--Image Sidebar-->
        <Style x:Key="ImageSidebarStyle" TargetType="Image">
            <Setter Property="Source" Value="pack://application:,,,/Resources/SortBy.png"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="ContextMenuService.IsEnabled" Value="False"/>
        </Style>

        <!--ImageBoxSideBarBackground-->
        <Style x:Key="SidebarBackgroundStyle" TargetType="Image">
            <Setter Property="Source" Value="pack://application:,,,/Resources/SidebarLauncher.png"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Height" Value="635"/>
            <!--<Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>-->
        </Style>

        <!--ListView Style-->
        <Style x:Key="ListViewAccountsStyle" TargetType="ListView">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="1000"/>
            <Setter Property="Height" Value="400"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        </Style>

        <!--ListView Item Style-->
        <DataTemplate x:Key="AccountListDataTemplate" DataType="data:Accounts">
            <DockPanel HorizontalAlignment="Left" Height="100" Width="960">
                <Image Name="image" Source="{Binding App}" HorizontalAlignment="Center" Width="64" RenderOptions.BitmapScalingMode="HighQuality"/>
                <StackPanel Margin="20,20,0,0">
                    <TextBlock Text="{Binding Username}" HorizontalAlignment="Left" FontSize="20" />
                    <TextBlock Text="{Binding Email}" HorizontalAlignment="Left" FontSize="12" />
                </StackPanel>
                <DockPanel Margin="0,20,0,0" HorizontalAlignment="Right" VerticalAlignment="Top">
                    <StackPanel>
                        <Image Name="imageEdit" MouseDown="ImageEdit_MouseDown" Width="16" Height="16" RenderOptions.BitmapScalingMode="NearestNeighbor" Source="pack://application:,,,/Resources/IconDelete.png"/>
                    </StackPanel>
                    <StackPanel>
                        <Image Name="imageDelete" MouseDown="ImageDelete_MouseDown" Width="16" Height="16" RenderOptions.BitmapScalingMode="NearestNeighbor" Source="pack://application:,,,/Resources/IconDelete.png"/>
                    </StackPanel>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <!--Button-->
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="pack://application:,,,/Resources/ButtonLogIn.png" Stretch="Fill"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" BorderThickness="0" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="pack://application:,,,/Resources/ButtonLogInHover.png" Stretch="Fill"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="pack://application:,,,/Resources/ButtonLogInActivated.png" Stretch="Fill"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid>
        <!--<Image x:Name="imageSideBar" Style="{StaticResource SidebarBackgroundStyle}"/>-->
        <Label x:Name="labelHeader" Style="{StaticResource LabelHeaderStyle}" Content="Accounts" Margin="140,50,0,0"/>
        <Image x:Name="imageSortBy" MouseDown="Image_MouseDown" Style="{StaticResource ImageSidebarStyle}" Margin="0,50,140,0">
            <Image.ContextMenu>
                <ContextMenu Style="{StaticResource ContextMenuStyle}">
                    <MenuItem x:Name="itemApp" Click="ItemApp_Click" Style="{StaticResource ContextMenuItemStyle}" Header="App"/>
                    <MenuItem x:Name="itemUsername" Click="ItemUsername_Click" Style="{StaticResource ContextMenuItemStyle}" Header="Username"/>
                    <MenuItem x:Name="itemEmail" Click="ItemEmail_Click" Style="{StaticResource ContextMenuItemStyle}" Header="Email"/>
                </ContextMenu>
            </Image.ContextMenu>
        </Image>
        <Button x:Name="buttonAdd" Click="ButtonAdd_Click" Style="{StaticResource ButtonStyle}" Content="Add Account" Margin="0,0,140,70"/>

        <ListView Name="ListViewAccounts"
                  ItemsSource="{Binding Accounts}" 
                  MouseDown="ListView_ItemClick" 
                  ItemTemplate="{StaticResource AccountListDataTemplate}"
                  Style="{StaticResource ListViewAccountsStyle}"
                  SelectedItem="{Binding Value, ElementName=slider}">
        </ListView>

        <!--PopupCreate-->
        <Grid x:Name="PopupCreate" Visibility="Hidden">
            <Rectangle x:Name="PopupBackground" Fill="#66FFFFFF" Width="1280" Height="635"/>
            <Image x:Name="PopupImage" Source="pack://application:,,,/Resources/BackgroundPopup.png" Width="400" Height="500" Stretch="Fill" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
            <Image x:Name="imageClose" MouseDown="ImageClose_MouseDown" MouseEnter="ImageClose_MouseEnter" MouseLeave="ImageClose_MouseLeave" Style="{StaticResource ToolboxStyle}" Margin="370,-470,0,0" Source="Resources/Close.png"/>
            <Label x:Name="labelPopupHeader" Style="{StaticResource LabelHeaderStyle}" Content="Create" Margin="490,120,0,0"/>

            <TextBox x:Name="textboxUsername" Style="{StaticResource TextboxStyle}" Text="{Binding InputText,Mode=TwoWay}" Margin="0,-99,0,0"/>
            <Label x:Name="labelCuebannerUsername" MouseLeftButtonUp="LabelCuebanner_MouseLeftButtonUp" Style="{StaticResource CluebannerUsernameStyle}" Content="Username" Target="{x:Reference textboxUsername}" Margin="520,-99,0,0"/>
            <Image x:Name="imageUserIcon" Style="{StaticResource TextboxIconStyle}" Source="pack://application:,,,/Resources/IconUser.png" Margin="0,-99,270,0"/>

            <PasswordBox x:Name="passwordboxPassword" Style="{StaticResource PasswordboxStyle}" Margin="0,-1,0,0"/>
            <Label x:Name="labelCuebannerPassword" MouseLeftButtonUp="LabelCuebanner_MouseLeftButtonUp" Style="{StaticResource CluebannerPasswordStyle}" Content="Password" Target="{x:Reference passwordboxPassword}" Margin="520,-1,0,0"/>
            <Image x:Name="imagePasswordIcon" Style="{StaticResource TextboxIconStyle}" Source="pack://application:,,,/Resources/IconPassword.png" Margin="0,-1,270,0"/>

            <TextBox x:Name="textboxEmail" Style="{StaticResource TextboxStyle}" Text="{Binding InputText,Mode=TwoWay}" Margin="0,99,0,0"/>
            <Label x:Name="labelCuebannerEmail" MouseLeftButtonUp="LabelCuebanner_MouseLeftButtonUp" Style="{StaticResource CluebannerEmailStyle}" Content="Email" Target="{x:Reference textboxEmail}" Margin="520,99,0,0"/>
            <Image x:Name="imageEmailIcon" Style="{StaticResource TextboxIconStyle}" Source="pack://application:,,,/Resources/IconEmail.png" Margin="0,99,270,0"/>

            <Button x:Name="buttonCreate" Click="ButtonCreate_Click" Style="{StaticResource ButtonStyle}" Content="Create Account" HorizontalAlignment="Center" Margin="0,0,0,90"/>
            <ComboBox x:Name="comboBoxApp" Margin="0,250,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Width="300" SelectionChanged="ComboBox_SelectionChanged">
                <ComboBoxItem>Steam</ComboBoxItem>
                <ComboBoxItem>Origin</ComboBoxItem>
                <ComboBoxItem>Uplay</ComboBoxItem>
                <ComboBoxItem>League Of Legends</ComboBoxItem>
            </ComboBox>
        </Grid>
        <!--PopupEdit-->
        <Grid x:Name="PopupEdit" Visibility="Hidden">
            <Rectangle x:Name="PopupEditBackground" Fill="#66FFFFFF" Width="1280" Height="635"/>
            <Image x:Name="PopupEditImage" Source="pack://application:,,,/Resources/BackgroundPopup.png" Width="400" Height="500" Stretch="Fill" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
            <Image x:Name="imageCloseEdit" MouseDown="ImageClose_MouseDown" MouseEnter="ImageClose_MouseEnter" MouseLeave="ImageClose_MouseLeave" Style="{StaticResource ToolboxStyle}" Margin="370,-470,0,0" Source="Resources/Close.png"/>
            <Label x:Name="labelPopupEditHeader" Style="{StaticResource LabelHeaderStyle}" Content="Create" Margin="490,120,0,0"/>

            <TextBox x:Name="textboxUsernameEdit" Style="{StaticResource TextboxStyle}" Text="{Binding InputText,Mode=TwoWay}" Margin="0,-99,0,0"/>
            <Label x:Name="labelCuebannerUsernameEdit" MouseLeftButtonUp="LabelCuebanner_MouseLeftButtonUp" Style="{StaticResource CluebannerUsernameEditStyle}" Content="Username" Target="{x:Reference textboxUsernameEdit}" Margin="520,-99,0,0"/>
            <Image x:Name="imageUserIconEdit" Style="{StaticResource TextboxIconStyle}" Source="pack://application:,,,/Resources/IconUser.png" Margin="0,-99,270,0"/>

            <TextBox x:Name="passwordboxPasswordEdit" Style="{StaticResource TextboxStyle}" Margin="0,-1,0,0"/>
            <Label x:Name="labelCuebannerPasswordEdit" MouseLeftButtonUp="LabelCuebanner_MouseLeftButtonUp" Style="{StaticResource CluebannerPasswordEditStyle}" Content="Password" Target="{x:Reference passwordboxPasswordEdit}" Margin="520,-1,0,0"/>
            <Image x:Name="imagePasswordIconEdit" Style="{StaticResource TextboxIconStyle}" Source="pack://application:,,,/Resources/IconPassword.png" Margin="0,-1,270,0"/>

            <TextBox x:Name="textboxEmailEdit" Style="{StaticResource TextboxStyle}" Text="{Binding InputText,Mode=TwoWay}" Margin="0,99,0,0"/>
            <Label x:Name="labelCuebannerEmailEdit" MouseLeftButtonUp="LabelCuebanner_MouseLeftButtonUp" Style="{StaticResource CluebannerEmailEditStyle}" Content="Email" Target="{x:Reference textboxEmailEdit}" Margin="520,99,0,0"/>
            <Image x:Name="imageEmailIconEdit" Style="{StaticResource TextboxIconStyle}" Source="pack://application:,,,/Resources/IconEmail.png" Margin="0,99,270,0"/>

            <Button x:Name="buttonEdit" Click="ButtonEdit_Click" Style="{StaticResource ButtonStyle}" Content="Create Account" HorizontalAlignment="Center" Margin="0,0,0,90"/>
            <ComboBox x:Name="comboBoxAppEdit" Margin="0,250,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Width="300" SelectionChanged="ComboBox_SelectionChanged">
                <ComboBoxItem>Steam</ComboBoxItem>
                <ComboBoxItem>Origin</ComboBoxItem>
                <ComboBoxItem>Uplay</ComboBoxItem>
                <ComboBoxItem>League Of Legends</ComboBoxItem>
            </ComboBox>
        </Grid>
    </Grid>
</Page>
